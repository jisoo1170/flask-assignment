name: Create Release Branch
on:
  workflow_dispatch:
    inputs:
      branch:
        description: Target Branch
        type: choice
        required: true
        default: 'release'
        options:
          - release
          - hotfix
      version:
        description: Target Version
        type: choice
        required: true
        default: 'minor'
        options:
          - major
          - minor
          - patch

jobs:
  create-release-branch:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        ref: develop
        token: ${{ secrets.ACTION_TOKEN }}

    - name: Initialize git config
      run: |
        git config --global url.https://${{ secrets.REPO_TOKEN }}@github.com/.insteadOf https://github.com/
        git config user.name "GitHub Actions"
        git config user.email noreply@github.com

    - name: 'Get Previous tag'
      id: previous-tag
      uses: "WyriHaximus/github-action-get-previous-tag@v1"
      with:
        fallback: 1.0.0 # Optional fallback tag to use when no tag can be found

    - name: 'Get next tag version'
      id: new-tags
      uses: "WyriHaximus/github-action-next-semvers@v1"
      with:
        version: ${{ steps.previous-tag.outputs.tag }}

    - name: 'Choose new tag'
      id: new-tag
      run: |
        if [[ "${{ github.event.inputs.version }}" == "major" ]]; then
            echo "::set-output name=tag::${{ steps.new-tags.outputs.v_major }}"
        elif [[ "${{ github.event.inputs.version }}" == "minor" ]]; then
            echo "::set-output name=tag::${{ steps.new-tag.outputs.v_minor }}"
        elif [[ "${{ github.event.inputs.version }}" == "patch" ]]; then
            echo "::set-output name=tag::${{ steps.new-tag.outputs.v_patch }}"
        fi

    - name: Create release or hotfix branch
      run: git checkout -b ${{ github.event.inputs.branch }}/${{ steps.new-tag.outputs.v_major }}

    - name: Update Target Branch
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: '.github/workflows/deploy_ci.yml'
        propertyPath: 'on.push.branches'
        value: ${{ github.event.inputs.branch }}/${{ steps.new-tag.outputs.v_major }}
        updateFile: true
        createPR: false
        commitChange: false

    - name: Update Image Version
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: '.github/workflows/deploy_ci.yml'
        propertyPath: 'env.VERSION'
        value: ${{ steps.new-tag.outputs.v_major }}_${{ github.sha }}
        updateFile: true
        createPR: false
        commitChange: false

    - name: Push new branch
      run: |
        git add .github/workflows/deploy_ci.yml
        git commit -m "${{ steps.new-tag.outputs.tag }} QA 배포"
        git push origin ${{ github.event.inputs.branch }}/${{ steps.new-tag.outputs.tag }}

    - name: Create pull request into main
      uses: thomaseizinger/create-pull-request@1.0.0
      with:
       github_token: ${{ secrets.GITHUB_TOKEN }}
       head: ${{ github.event.inputs.branch }}/${{ steps.new-tag.outputs.tag }}
       base: master
       title: ${{ steps.new-tag.outputs.tag }} into master
       body: |
           This PR was created in response workflow running.
           I've updated the version name and code commit: ${{ steps.make-commit.outputs.commit }}.

    - name: Create pull request to develop
      uses: thomaseizinger/create-pull-request@1.0.0
      with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          head: ${{ github.event.inputs.branch }}/${{ steps.new-tag.outputs.tag }}
          base: develop
          title: ${{ steps.new-tag.outputs.tag }} into develop
          body: |
              This PR was created in response workflow running.
              I've updated the version name and code commit: ${{ steps.make-commit.outputs.commit }}.
