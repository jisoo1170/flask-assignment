name: Pytest

on:
  pull_request:
    branches: [ develop ]

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: reviewdog/action-black@v2
      with:
        reporter: github-pr-review
        level: warning

  pylint:
    name: runner / pylint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: dciborow/action-pylint@v1
        with:
          reporter: github-pr-review
          level: warning

      - name: pylint
        uses: ricardochaves/python-lint@v1.4.0
        with:
          python-root-list: "app"

  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install pip
      run: |
        pip install pytest-cov
        pip install wheel

    - name: Install poetry
      uses: snok/install-poetry@v1.0.0
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      run: poetry install
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'

    - name: Run pytest
      run: |
        poetry env info
        source $HOME/.poetry/env
        PHASE=test pytest --junitxml=pytest.xml --cov-report=term-missing:skip-covered --cov=app tests/ | tee pytest-coverage.txt

    - name: Pytest coverage comment
      id: run-test
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: ./pytest-coverage.txt
        junitxml-path: ./pytest.xml
        create-new-comment: true

    - name: Get Error
      if: steps.run-test.outputs.errors > 0 || steps.run-test.oupts.failures > 0
      run: exit 1
